name: Deploy Plex Dashboard

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        shell: powershell
        run: |
          @"
          NEXT_PUBLIC_FETCH_TIMEOUT=$($env:FETCH_TIMEOUT)
          "@ | Out-File -Encoding utf8 .env.build

          $env:NEXT_PUBLIC_FETCH_TIMEOUT = "${{ secrets.FETCH_TIMEOUT }}"

          docker-compose build
        env:
          FETCH_TIMEOUT: ${{ secrets.FETCH_TIMEOUT }}

      - name: Deploy service
        shell: powershell
        run: |
          @"
          NODE_ENV=production
          PLEX_URL=$($env:PLEX_URL)
          PLEX_TOKEN=$($env:PLEX_TOKEN)
          FETCH_TIMEOUT=$($env:FETCH_TIMEOUT)
          SPOTIFY_CLIENT_ID=$($env:SPOTIFY_CLIENT_ID)
          SPOTIFY_CLIENT_SECRET=$($env:SPOTIFY_CLIENT_SECRET)
          "@ | Out-File -Encoding utf8 .env

          $env:PLEX_URL = "${{ secrets.PLEX_URL }}"
          $env:PLEX_TOKEN = "${{ secrets.PLEX_TOKEN }}"
          $env:FETCH_TIMEOUT = "${{ secrets.FETCH_TIMEOUT }}"
          $env:SPOTIFY_CLIENT_ID = "${{ secrets.SPOTIFY_CLIENT_ID }}"
          $env:SPOTIFY_CLIENT_SECRET = "${{ secrets.SPOTIFY_CLIENT_SECRET }}"

          $containerExists = docker ps -a --filter "name=plex-api-dashboard" --format "{{.Names}}"
          if ($containerExists) {
            Write-Host "Stopping and removing existing container..."
            docker stop plex-api-dashboard
            docker rm plex-api-dashboard
          }

          docker-compose up -d

          docker ps -f name=plex-api-dashboard
        env:
          NODE_ENV: production
          PLEX_URL: ${{ secrets.PLEX_URL }}
          PLEX_TOKEN: ${{ secrets.PLEX_TOKEN }}
          FETCH_TIMEOUT: ${{ secrets.FETCH_TIMEOUT }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}

      - name: Cleanup
        shell: powershell
        run: |
          docker image prune -a --filter "until=72h" --force
